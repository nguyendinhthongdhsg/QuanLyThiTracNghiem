/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Component;

import BLL.UsersBLL;
import DTO.UsersDTO;
import UI.Add.UserAdd;
import UI.Detail.UserDetail;
import UI.Update.UserUpdate;
import helper.ImportExcel;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Admin
 */
public class UserManagement extends javax.swing.JPanel {

    /**
     * Creates new form UserManagement
     */
    
    private DefaultTableModel tblModel;
    private ArrayList<UsersDTO> userList = new ArrayList<>();
    private final UsersBLL userBLL = new UsersBLL();
    private UsersDTO userLogin;
    
    public UserManagement(UsersDTO userLogin) {
        this.userLogin = userLogin;
        initComponents();
        initComponentCustom();
        initTable();
        userList = userBLL.getUserList();
        loadDataToTable(userList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initComponentCustom() {
        jToolBarMenu.setFloatable(false);
    }
    
    private void initTable() {
        tblModel = new DefaultTableModel();
        String[] headerTbl = new String[]{"ID người dùng", "Họ Tên", "Email", "Quyền"};
        tblModel.setColumnIdentifiers(headerTbl);
        JTableHeader header = jTableUser.getTableHeader();
        header.setFont(new Font("Segoe UI", Font.BOLD, 12));
        jTableUser.setModel(tblModel);
        jTableUser.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTableUser.getColumnModel().getColumn(1).setPreferredWidth(50);
        jTableUser.getColumnModel().getColumn(2).setPreferredWidth(50);
        jTableUser.getColumnModel().getColumn(3).setPreferredWidth(30);
    }
    
    private void loadDataToTable(ArrayList<UsersDTO> userList) {
        try {
            tblModel.setRowCount(0);
            for (UsersDTO i : userList) {
                tblModel.addRow(new Object[]{
                    i.getUserID(), i.getUserFullName(), i.getUserEmail(), i.getIsAdmin() == 1 ? "Quản trị" : "Người dùng"
                });
            }
        } 
        catch (Exception e) {
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jToolBarMenu = new javax.swing.JToolBar();
        jButtonAdd = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonDetail = new javax.swing.JButton();
        jButtonResetPassword = new javax.swing.JButton();
        jButtonImport = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jToolBarMenu.setBackground(new java.awt.Color(255, 255, 255));
        jToolBarMenu.setBorder(null);
        jToolBarMenu.setRollover(true);

        jButtonAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add.png"))); // NOI18N
        jButtonAdd.setText("Thêm");
        jButtonAdd.setFocusable(false);
        jButtonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonAddMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonAdd);

        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit.png"))); // NOI18N
        jButtonUpdate.setText("Sửa");
        jButtonUpdate.setFocusable(false);
        jButtonUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonUpdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonUpdateMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonUpdate);

        jButtonDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        jButtonDelete.setText("Xóa");
        jButtonDelete.setFocusable(false);
        jButtonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonDeleteMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonDelete);

        jButtonDetail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/detail.png"))); // NOI18N
        jButtonDetail.setText("Chi tiết");
        jButtonDetail.setFocusable(false);
        jButtonDetail.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonDetail.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonDetailMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonDetail);

        jButtonResetPassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonResetPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reset.png"))); // NOI18N
        jButtonResetPassword.setText("Đặt lại mật khẩu");
        jButtonResetPassword.setFocusable(false);
        jButtonResetPassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonResetPassword.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonResetPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonResetPasswordMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonResetPassword);

        jButtonImport.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/xls.png"))); // NOI18N
        jButtonImport.setText("Nhập excel");
        jButtonImport.setFocusable(false);
        jButtonImport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonImport.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonImport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonImportMouseReleased(evt);
            }
        });
        jToolBarMenu.add(jButtonImport);

        jTextFieldSearch.setText("Nhập nội dung tìm kiếm...");
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusGained(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "ID người dùng", "Tên đăng nhập", "Email", "Họ và tên" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID người dùng", "Họ và tên", "Email", "Quyền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUser.setRowHeight(30);
        jTableUser.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableUser.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableUser.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableUser);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusGained
        if(jTextFieldSearch.getText().equals("Nhập nội dung tìm kiếm...")) {
            jTextFieldSearch.setText("");
        }
    }//GEN-LAST:event_jTextFieldSearchFocusGained

    private void jButtonAddMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddMouseReleased
        UserAdd userAdd = new UserAdd((JFrame) SwingUtilities.getWindowAncestor(this), true);
        userAdd.setVisible(true);
        userList = userBLL.getUserList();
        loadDataToTable(userList);
    }//GEN-LAST:event_jButtonAddMouseReleased

    private void jButtonUpdateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonUpdateMouseReleased
        int indexSelectedRow = jTableUser.getSelectedRow();
        if(indexSelectedRow == -1) {
            JOptionPane.showMessageDialog(
                this,
                "Vui lòng chọn người dùng muốn chỉnh sửa thông tin!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        } else {
            UsersDTO oldUser = userList.get(indexSelectedRow);
            UserUpdate userUpdate = new UserUpdate((JFrame) SwingUtilities.getWindowAncestor(this), true, oldUser);
            userUpdate.setVisible(true);
            userList = userBLL.getUserList();
            loadDataToTable(userList);
        }
    }//GEN-LAST:event_jButtonUpdateMouseReleased

    private void jButtonDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteMouseReleased
        int indexSelectedRow = jTableUser.getSelectedRow();
        if(indexSelectedRow == -1) {
            JOptionPane.showMessageDialog(
                this,
                "Vui lòng chọn người dùng muốn xóa!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        }
        else if(userList.get(indexSelectedRow).getUserID() == userLogin.getUserID()) {
            JOptionPane.showMessageDialog(
                this,
                "Người dùng này đang đăng nhập, không thể xóa!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        }
        else {
            int checkValueChoice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa người dùng này?",
                            "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if(checkValueChoice == JOptionPane.YES_OPTION) {
                UsersDTO user = userList.get(indexSelectedRow);
                String result = userBLL.delete(user.getUserID());
                JOptionPane.showMessageDialog(this, result, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                userList = userBLL.getUserList();
                loadDataToTable(userList);
            }
        }
    }//GEN-LAST:event_jButtonDeleteMouseReleased

    private void jButtonDetailMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDetailMouseReleased
        int indexSelectedRow = jTableUser.getSelectedRow();
        if(indexSelectedRow == -1) {
            JOptionPane.showMessageDialog(
                this,
                "Vui lòng chọn người dùng muốn xem thông tin!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        } else {
            UsersDTO user = userList.get(indexSelectedRow);
            UserDetail userDetail = new UserDetail((JFrame) SwingUtilities.getWindowAncestor(this), true, user);
            userDetail.setVisible(true);
        }
    }//GEN-LAST:event_jButtonDetailMouseReleased

    private void jButtonResetPasswordMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonResetPasswordMouseReleased
        int indexSelectedRow = jTableUser.getSelectedRow();
        if(indexSelectedRow == -1) {
            JOptionPane.showMessageDialog(
                this,
                "Vui lòng chọn người dùng muốn đặt lại mật khẩu!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        } else {
            int checkValueChoice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn đặt lại mật khẩu người dùng này?",
                            "Xác nhận đặt lại mật khẩu", JOptionPane.YES_NO_OPTION);
            if(checkValueChoice == JOptionPane.YES_OPTION) {
                UsersDTO user = userList.get(indexSelectedRow);
                String result = userBLL.resetPassword(user.getUserID());
                JOptionPane.showMessageDialog(this, result, "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                userList = userBLL.getUserList();
                loadDataToTable(userList);
            }
        }
    }//GEN-LAST:event_jButtonResetPasswordMouseReleased

    private void jButtonImportMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonImportMouseReleased
        // Mở hộp thoại chọn file
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn file Excel");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        // Lọc chỉ hiển thị file .xlsx
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files (*.xlsx)", "xlsx"));

        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            ImportExcel importExcel = new ImportExcel();
            File selectedFile = fileChooser.getSelectedFile();
            List<UsersDTO> userListNew = importExcel.readFileUser(selectedFile);
            for(UsersDTO user : userListNew) {
                userBLL.add(user);
            }
            JOptionPane.showMessageDialog(this, "Thêm danh sách người dùng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            userList = userBLL.getUserList();
            loadDataToTable(userList);
            
        } else {
            JOptionPane.showMessageDialog(
                this,
                "Không có file nào được chọn!",
                "Cảnh Báo",
                JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_jButtonImportMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDetail;
    private javax.swing.JButton jButtonImport;
    private javax.swing.JButton jButtonResetPassword;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUser;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JToolBar jToolBarMenu;
    // End of variables declaration//GEN-END:variables
}
